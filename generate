#!/bin/bash

set -u

IFS=";"

[ ! -f "config" ] && cp config.dist config
source config
MAMEFILTER=${1:-$MAMEFILTER}

[ ! -f "${MAMEFILTER}" ] && echo "ERROR: ${MAMEFILTER} not found, exiting" && exit 1

# we depend on xmllint
function install_deps {

  [ ! -f "${MAMEPATH}/mame" ] && echo "ERROR: MAME was not found in $MAMEPATH" && exit 1

  source /etc/os-release

  case $ID in
    debian|ubuntu)
      PACKAGE=libxml2-utils 
      dpkg -l 2>/dev/null | grep $PACKAGE &>/dev/null
      [ $? -ne 0 ] && apt-get install -y $PACKAGE &>/dev/null
      ;;
    manjaro|arch)
      PACKAGE=libxml2
      pacman -Q $PACKAGE &>/dev/null
      [ $? -ne 0 ] && pacman -Ssy $PACKAGE &> /dev/null
  esac

}

# get the version from MAME
function version {
   export MAMEVER=$(${MAMEPATH}/mame -version | awk '{print $1}')
}

# run the filter
function run {
  local XPATH="${1}"
  local INIFILE="${2}"
  local INITITLE="${3}"
  [ -z "${MAMEVER}" ] && version
  local OUTDIR="${MAMEFOLDER}/${MAMEVER}"
  [ ! -d "${OUTDIR}" ] && mkdir -p "${OUTDIR}"
  local OUTFILE="${OUTDIR}/${INIFILE}"
  if [ ! -f $OUTFILE ]
  then
    echo -n "Processing: $INITITLE (mame${MAMEVER}) "
    echo -e "[FOLDER_SETTINGS]\nRootFolderIcon mame\nSubFolderIcon folder\n\n[${INITITLE}]" > "${OUTFILE}"
    cat "${MAMECACHE}/mame_${MAMEVER}.xml" | xmllint --xpath $XPATH - 2>/dev/null | awk -F'"' '{print $2}' >> "${OUTFILE}"
    echo "[DONE]"
  else
    echo "Exists: $INIFILE (mame${MAMEVER}) [SKIPPED]"
  fi
}

# generate a cached xml
function cache {
  [ -z "${MAMEVER}" ] && version
  CACHEFILE="${MAMECACHE}/mame_${MAMEVER}.xml"

  if [ ! -f "${CACHEFILE}" ] 
  then
    echo "Generating cache for mame${MAMEVER}"
    cd ${MAMEPATH}
    ./mame -lx > "${CACHEFILE}"
    cd "${OLDPWD}"
  fi
}

# create required dirs
[ ! -d "${MAMEFOLDER}" ] && mkdir -p "${MAMEFOLDER}"
[ ! -d "${MAMECACHE}" ] && mkdir -p "${MAMECACHE}"

# run the other bits
install_deps
version
cache

# source and run the filter
source ${MAMEFILTER}
run "${XPATH}" "${INIFILE}" "${INITITLE}"
